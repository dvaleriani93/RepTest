<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Callback page</title>
    <script type="text/javascript">
      SendCmd = function(cmd, params)
      {
        var url = self._ShellURL + "?_CMD=" + cmd;
        if (params)
        {
          if (typeof(params) == "string") // Vedi Desktop::HandleShell
            url += "&" + params;
          else
          {
            // Passo i parametri in BASE64
            var keys = Object.keys(params);
            for (var i = 0; i < keys.length; i++)
            {
              var key = keys[i];
              var val = params[key];
              url += "&" + key + "=" + btoa(unescape(encodeURIComponent(val)));
            }
          }
        }
        var xhReq = new XMLHttpRequest();
        xhReq.open("GET", url, false);
        xhReq.send(null);
        //
        return xhReq.responseText;
      }

      function OnLoad()
      {
        if (self._ShellURL)
        {
          // Se sono stato chiamato senza CMD ma c'� un parametro "code" � una redirect da OneDrive.
          // OneDrive non consente di avere una query string nel redirect uri
          var p = window.location.href.toUpperCase().indexOf('?CMD=');
          if (p != -1 || window.location.href.toUpperCase().indexOf("code=") != -1)
          {
            // Separo CMD e parametri
            var cmd = p != -1 ? window.location.href.substring(p + 5) : window.location.href;
            var params = '';
            p = cmd.indexOf('&');
            if (p != -1)
            {
              params = cmd.substring(p + 1);
              cmd = cmd.substring(0, p);
            }
            //
            // Se sono dentro alla shell, lo giro a lei che, a sua volta, lo gira al servizio
            // (operazione necessaria per le autenticazioni OAUTH tipo Dropbox, ...)
            var res = SendCmd("SVCCMD", {URL: window.location.href, CMD: cmd, PARAMS: params});
          }
        }
        else {
          if (3 === 4)
            return window.setTimeout("OnLoad()", 500);
          //
          let stateIdx = window.location.search.indexOf("state=");
          let url = decodeURIComponent(window.location.search.substring(stateIdx + "state=".length));
          let code = window.location.search.substring(1, stateIdx - 1)
          window.open(url + "&" + code, "_self");
        }
      }
    </script>
  </head>
  <body onload="OnLoad()">
  </body>
</html>
